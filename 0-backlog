TODO

    general pi powersaving

    fixed ip

    LED powersave via gpio-controlled relay

    app architecture for remote storage
    
            group conversation
            send photos with notifications
        telegram bot
        camera : simultaneous photo + video
        don't sleep() between frames
    Various uprioritized features 
    
        preset detection from user agent
        client now sends the wanted quality preset
        settings tab with multiple presets
            https://codepen.io/dapacreative/pen/PqXxoP
            https://speckyboy.com/10-simple-code-snippets-creating-beautiful-tabs/
        tabbed layout
    proper webapp
    
        that unknown bug : https://sourceware.org/bugzilla/show_bug.cgi?id=19329
        Proper exception management w/ telegram send timeouts (photo)
        Thread / Coroutine issue == debug the simplified architecture (streamsplitter as the output of picamera) with stackoverflow
        creation/destruction of the camerawrapper should be implemented with and incrementing/decrementing lock
    QoL / bugs / stability / code improvement
    
    

TESTING

            check for exceptions, exit properly
                (camera callback = enqueue, coroutine = await dequeue)
            try a proper coroutine architecture for stream_process
            fix "STOPSTREAM not received when stream running" bug 
        add graceful exit + ping client
    QoL / bugs / stability / code improvement


DONE
            https://urllib3.readthedocs.io/en/latest/user-guide.html#using-timeouts
            modified (~L270) /usr/lib/python3.7/site-packages/telegram/utils/request.py 
                ^ This is the fix : set connect timeout to same timeout as receive timeout
            modified  (~L70) /usr/lib/python3.7/site-packages/telegram/bot.py
        Telegram : sending photos > 550ko timeout, regardless of the timeout parameter
    bugs 

    Send photo on movement detected + send photo on ping

            pure python / picamera stream version
            raspivid stream version
            rewrite stream-split
        convert websocket / streaming server to python
        convert http server to python / tornado
        Split nodejs code into httpserver and websocketserver
    port git-h264-live-player to pure python

    register / ping over telegram bot

    "h264 streaming over http/websocket" Proof of concept from borrowed nodejs code

    Basic photo and video

        multiple callback
        motion detection
    PIR Sensor 

    3-setup-user.sh

    2-setup-system.sh

    1-mksdcard.sh
        nm-profiles
        sh+hostname setup
        wifi-autoconnect
        arch linux extract script
